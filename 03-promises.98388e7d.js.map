{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAM,CACVC,OAAQC,SAASC,cAAc,QAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBA+BnC,SAASI,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAAKC,GAChC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEAF,EAAE,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEhDG,EAAE,sBAAuCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAGhDA,E,IAGKS,MAAK,SAACC,GACVC,EAAAtB,GAASuB,OAAOC,QAAQH,E,IACvBI,OAAM,SAACJ,GACRC,EAAAtB,GAASuB,OAAOG,QAAQL,E,IA7ClCnB,EAAIC,OAAOwB,iBAAiB,UAQ5B,SAAwBC,GACtBA,EAAEC,iBAEF,IADA,IAAMC,EAAQ5B,EAAIM,SAASuB,MAClBC,EAAI,EAAGA,GAAKF,EAAOE,GAAK,EAC/BvB,EAAcuB,EAAGC,OAAO/B,EAAII,QAAQyB,OAASE,OAAO/B,EAAIK,OAAOwB,OAASC,EAAI,I,IAThFE,QAAQC,IAAIjC,EAAIM,S","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\nconst ref = {\n  formEl: document.querySelector(\"form\"),\n  delayEl: document.querySelector(\"input[name='delay']\"),\n  stepEl: document.querySelector(\"input[name='step']\"),\n  amountEl: document.querySelector(\"input[name='amount']\"),\n}\n\nref.formEl.addEventListener(\"submit\", sendSubmitForm);\n\n\nconsole.log(ref.amountEl);\n\n\n\n\nfunction sendSubmitForm(e) {\n  e.preventDefault();\n  const count = ref.amountEl.value;\n  for (let i = 1; i <= count; i += 1){\n    createPromise(i, Number(ref.delayEl.value) + Number(ref.stepEl.value * (i - 1)));\n    //console.log(Number(ref.delayEl.value) + Number(ref.stepEl.value * (i - 1)));\n    //console.log(Number(ref.delayEl.value) + Number(ref.stepEl.value * (i-1)));\n    \n  }\n\n\n\n\n  // ref.delayEl.value;\n  // console.log(ref.delayEl.value);\n}\n\n\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n        //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  })\n\n    promise.then((str) => {\n        Notiflix.Notify.success(str);\n      }).catch((str) => {\n        Notiflix.Notify.failure(str);\n      });\n  //console.log(promise);\n\n}\n    "],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$ref","formEl","document","querySelector","delayEl","stepEl","amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","concat","then","str","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","e","preventDefault","count","value","i","Number","console","log"],"version":3,"file":"03-promises.98388e7d.js.map"}